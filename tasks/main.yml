---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Intall yum packages.
  yum: pkg={{ item }} state=present
  with_items:
    - httpd
    - mod_ssl
  when: ansible_os_family == 'RedHat'

- lineinfile:
    dest: /etc/httpd/conf/httpd.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: '^ *NameVirtualHost  *\*:80'
      line: 'NameVirtualHost *:80'
    - regexp: '^ *NameVirtualHost  *\*:443'
      line: 'NameVirtualHost *:443'

- name: Setup vhost.d directory
  file: path={{ apache_vhost_dir }} state=directory
  when: ansible_os_family == 'RedHat'

- name: Setup parent directory and sftp jail permissions
  file: path={{ vhost_parent_root }} state=directory mode=0755 owner=root group=root

- name: Create sftponly group
  group: name=sftponly state=present

- name: Create sftp only user
  user: name={{ item.sftp_user }} groups=sftponly home={{ item.vhost_home }} password={{ item.sftp_pass }} shell=/sbin/nologin state=present
  with_items: vhosts
  tags: user

- name: Create jail directory
  file: path={{ item.vhost_home }} state=directory owner=root group=root mode=0755
  with_items: vhosts
  tags: jail_dir

- name: Create document root and set permissions
  file: path={{ item.vhost_home }}/public_html state=directory owner={{ item.sftp_user }} group={{ apache_group }} mode=4775
  with_items: vhosts
  tags: doc_root

- name: Create apache vhost
  template: src=vhost.conf.j2 dest={{ apache_vhost_dir }}/{{ item.server_name }}.conf owner=root mode=0644
  with_items: vhosts
  tags: vhost

- name: Enable vhosts
  command: /usr/sbin/a2ensite {{ item.server_name }}.conf
  with_items: vhosts
  when: ansible_os_family == 'Debian'
  tags: enable_vhost

- copy:
    src: "files/{{ item.ssl_certificate_file }}"
    dest: /etc/pki/tls/certs/
    owner: root
    group: root
    mode: 0755
  with_items: vhosts
  when: ansible_os_family == 'RedHat' and item.ssl_certificate_file is defined
- copy:
    src: "files/{{ item.ssl_certificate_key_file }}"
    dest: /etc/pki/tls/certs/
    owner: root
    group: root
    mode: 0755
  with_items: vhosts
  when: ansible_os_family == 'RedHat' and item.ssl_certificate_key_file  is defined
- copy:
    src: "files/{{ item.ssl_certificate_chain_file }}"
    dest: /etc/pki/tls/certs/
    owner: root
    group: root
    mode: 0755
  with_items: vhosts
  when: ansible_os_family == 'RedHat' and item.ssl_certificate_chain_file  is defined
- copy:
    src: "files/{{ item.ssl_cacertificate_file }}"
    dest: /etc/pki/tls/certs/
    owner: root
    group: root
    mode: 0755
  with_items: vhosts
  when: ansible_os_family == 'RedHat' and item.ssl_cacertificate_file is defined

- name: strip ssl keys
  command: openssl rsa -in {{item.key_dest}} -out {{item.key_stripped}} -passin pass:{{item.key_password}} creates={{item.key_stripped}}
  with_items: ssl_certificates

- name: Restart apache
  service: name={{ apache_process }} state=restarted
